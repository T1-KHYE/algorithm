import org.junit.Test;

import java.util.HashMap;
import java.util.Map;

// 暴力枚举，哈希表
public class Topic_1 {
    //  时间复杂度：O(N^2)
    public int[] twoSum(int[] nums, int target) {
        for (int i = 0; i < nums.length - 1; i++) {
            for (int j = i + 1; j < nums.length; j++) {
                if (nums[i] + nums[j] == target) return new int[]{i, j};
            }
        }
        return null;
    }

/*
//    利用哈希表的特性，寻找元素下标的速度是O(1),避免使用一次for循环
    public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> hashtable = new HashMap<Integer, Integer>();
        for (int i = 0; i < nums.length; i++) {
            if (hashtable.containsKey(target - nums[i])) {
                return new int[]{hashtable.get(target - nums[i]), i};
            }
            hashtable.put(nums[i], i);
        }
        return new int[0];
    }
*/

/*
    @Test
    public void twoSum_test() {
        int[] nums = {3, 2, 4};
        int target = 6;
        for (int i = 0; i < nums.length - 1; i++) {
            for (int j = i + 1; j < nums.length; j++) {
                if (nums[i] + nums[j] == target) {
                    System.out.println("[" + i + ", " + j + "]");
                    break;
                }
            }
        }
    }
    */
}


